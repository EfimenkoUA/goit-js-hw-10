{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast/dist/js/iziToast.min.js';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('button');\nconst dataInput = document.querySelector('[data-input]');\nflatpickr('#datetime-picker', {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n\n        if (selectedDate <= new Date()) {\n            button.disabled = true;\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n            });\n        } else {\n            button.disabled = false;\n            button.addEventListener('click', () => startCountdown(selectedDate));\n        }\n    },\n});\n\nlet countdownInterval;\nlet selectedDate;\n\nfunction startCountdown(targetDate) {\n    dataInput.disabled = true;\n    button.disabled = true;\n    selectedDate = targetDate;\n\n    countdownInterval = setInterval(() => updateCountdown(), 1000);\n}\n\nfunction updateCountdown() {\n    const currentDate = new Date();\n    const timeDifference = selectedDate - currentDate;\n\n    if (timeDifference <= 0) {\n        clearInterval(countdownInterval);\n        displayTime({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n        button.disabled = false;\n    } else {\n        const timeLeft = convertMs(timeDifference);\n        displayTime(timeLeft);\n    }\n}\n\nfunction displayTime({ days, hours, minutes, seconds }) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return value < 10 ? `0${value}` : value;\n}"],"names":["button","dataInput","flatpickr","selectedDates","selectedDate","iziToast","startCountdown","countdownInterval","targetDate","updateCountdown","currentDate","timeDifference","displayTime","timeLeft","convertMs","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"0IAKA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAY,SAAS,cAAc,cAAc,EACvDC,EAAU,mBAAoB,CAC1B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,GAE/BC,GAAgB,IAAI,MACpBJ,EAAO,SAAW,GAClBK,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,IAEDL,EAAO,SAAW,GAClBA,EAAO,iBAAiB,QAAS,IAAMM,EAAeF,CAAY,CAAC,EAE1E,CACL,CAAC,EAED,IAAIG,EACAH,EAEJ,SAASE,EAAeE,EAAY,CAChCP,EAAU,SAAW,GACrBD,EAAO,SAAW,GAClBI,EAAeI,EAEfD,EAAoB,YAAY,IAAME,EAAiB,EAAE,GAAI,CACjE,CAEA,SAASA,GAAkB,CACvB,MAAMC,EAAc,IAAI,KAClBC,EAAiBP,EAAeM,EAEtC,GAAIC,GAAkB,EAClB,cAAcJ,CAAiB,EAC/BK,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDZ,EAAO,SAAW,OACf,CACH,MAAMa,EAAWC,EAAUH,CAAc,EACzCC,EAAYC,CAAQ,CACvB,CACL,CAEA,SAASD,EAAY,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACpD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAeD,CAAO,CACjF,CAEA,SAASJ,EAAUM,EAAI,CAMnB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeE,EAAO,CAC3B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACtC"}